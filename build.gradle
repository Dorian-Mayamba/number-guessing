plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'maven-publish'
}

group 'com.numbers'
version '1.0-SNAPSHOT'

repositories {
    flatDir {
        dirs "$System.env.user_home/Desktop/jar-games"
    }
    mavenCentral()
    mavenLocal()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '15'
targetCompatibility = '15'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.numbers.numbers'
    mainClass = 'com.numbers.numbers.Launcher'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

task printModuleNamw{
    println "$System.env"
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

jar{
    inputs.property("moduleName", moduleName)
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                "Main-Class": "com.numbers.numbers.Launcher",
                "Class-Path": configurations.compileClasspath.collect{it.getName()}.join(' ')
        )
    }
    from(configurations.runtimeClasspath.collect{it.isDirectory()?it:zipTree(it)})
    from sourceSets.main.output + sourceSets.main.allSource
}

artifacts{
    jar
}

publishing {
    publications{
        mavenJava(MavenPublication){
            artifact jar
        }
    }
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Launcher'
    }
}

jlinkZip {
    group = 'distribution'
}

task copyJar(type:Copy){
    from(jar.archiveBaseName)
    into "$System.env.user_home/Desktop/jar-games"
}

task localBuild(dependsOn: ['build', 'publishToMavenLocal','copyJar'])